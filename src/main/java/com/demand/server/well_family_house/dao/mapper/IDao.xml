<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demand.server.well_family_house.dao.IDao">
	<!-- user info -->
	<select id="getUserInfo" resultType="com.demand.server.well_family_house.dto.User">
		select
		id,email,name,birth,phone,avatar,level from
		users
		where
		id = #{param1};
	</select>

	<!-- intro -->
	<select id="login" resultType="com.demand.server.well_family_house.dto.User">
		select
		id,email,name,birth,phone,avatar,level from
		users
		where
		email = #{param1}
		and password = #{param2};
	</select>

	<select id="email_check" resultType="com.demand.server.well_family_house.dto.Email">
		select email from
		users where
		email = #{param1};
	</select>

	<update id="updateDeviceIdToken">
		update users set device_id = #{param2}, token =
		#{param3} where id =
		#{param1};
	</update>

	<select id="checkDeviceId" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(device_id) as
		checked FROM wellfamily.users where id=#{param1} and device_id =
		#{param2};
	</select>

	<update id="updateToken">
		update users set token = #{param2} where id =
		#{param1};
	</update>

	<insert id="join">
		insert into
		users(email,password,name,birth,phone,login_category_id)
		values(#{param1},#{param2},#{param3},#{param4},#{param5},#{param6});
	</insert>


	<!-- main -->
	<select id="getFamilyInfo" resultType="com.demand.server.well_family_house.dto.Family">
		select f.id as id, f.name
		as name, f.content as
		content, f.avatar as avatar, f.user_id as user_id
		from familys f ,
		(SELECT family_id as f_id FROM family_joiners where
		user_id =
		#{param1}) u
		where f.id = u.f_id;
	</select>

	<!-- family main -->
	<select id="getFamilyUserInfo" resultType="com.demand.server.well_family_house.dto.User">
		select u.id as id
		,u.email as email,u.name as name,u.birth as birth,u.phone as phone,
		u.avatar as avatar,u.level as level from users u, (SELECT * FROM
		family_joiners where
		family_id = #{param1} and user_id != #{param2}) f
		where u.id = f.user_id order by name;
	</select>

	<select id="getContentList" resultType="com.demand.server.well_family_house.dto.StoryInfo">
		SELECT u.id as user_id,
		u.name as name,u.avatar as avatar, s.id as story_id, s.created_at as
		created_at
		, s.content
		as content
		FROM users u, stories s
		where u.id =
		s.user_id and
		s.family_id=#{param1} order by s.created_at desc;
	</select>

	<select id="getPhotoList" resultType="com.demand.server.well_family_house.dto.Photo">
		select p.id as id,
		p.story_id as story_id, p.type as type, p.name as name, p.ext as ext
		from photos p, (SELECT id FROM stories where family_id =#{param1}) s
		where p.story_id = s.id order by p.updated_at desc;
	</select>

	<!-- content count (family main) -->
	<select id="getLikeCount" resultType="com.demand.server.well_family_house.dto.LikeCount">
		select count(user_id) as
		like_count from story_likes where
		story_id = #{param1};
	</select>

	<select id="getCommentCount"
		resultType="com.demand.server.well_family_house.dto.CommentCount">
		SELECT count(user_id) as comment_count
		FROM comments where
		story_id = #{param1};
	</select>

	<select id="getContentPhotoList" resultType="com.demand.server.well_family_house.dto.Photo">
		SELECT id, story_id
		, type
		, name, ext FROM photos
		where story_id= #{param1};
	</select>

	<insert id="updateLikeUp">
		insert into story_likes(user_id,story_id)
		values(#{param1},#{param2});
	</insert>

	<delete id="updateLikeDown">
		delete from story_likes where user_id = #{param1} and
		story_id =#{param2};
	</delete>

	<select id="checkLike" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(id) as checked
		FROM story_likes where user_id = #{param1} and story_id = #{param2};
	</select>

	<!-- comment list -->

	<select id="getCommentList" resultType="com.demand.server.well_family_house.dto.CommentInfo">
		select c.id as
		comment_id, c.user_id as user_id, u.name as user_name ,u.avatar as
		avatar,c.content as content, c.created_at as created_at, c.deleted as
		deleted FROM comments c,users u where c.user_id = u.id and c.story_id
		=#{param1} order by c.created_at;
	</select>

	<insert id="insertComment" parameterType="com.demand.server.well_family_house.dto.Comment"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		comments(user_id,story_id,content)
		values(#{user_id},#{story_id},#{content});
	</insert>

	<select id="getComment" resultType="com.demand.server.well_family_house.dto.Comment">
		select * from comments where
		id = #{param1};
	</select>

	<!-- story insert -->
	<insert id="insertStory" parameterType="com.demand.server.well_family_house.dto.Story"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		stories(user_id,family_id,content)
		values(#{user_id},#{family_id},#{content});
	</insert>

	<insert id="insertPhoto" parameterType="com.demand.server.well_family_house.dto.Photo">
		insert into
		photos(story_id,type,name,ext)
		values(#{story_id},#{type},#{name},#{ext});
	</insert>

	<select id="getStory" resultType="com.demand.server.well_family_house.dto.Story">
		select id,
		user_id,family_id,content,created_at from stories where id =
		#{param1};
	</select>


	<!-- memory song -->
	<select id="getSongLikeCount" resultType="com.demand.server.well_family_house.dto.LikeCount">
		select count(user_id)
		as
		like_count from song_likes where
		song_id = #{param1};
	</select>

	<select id="getSongCommentCount"
		resultType="com.demand.server.well_family_house.dto.CommentCount">
		SELECT count(user_id) as comment_count
		FROM song_comments
		where
		song_id = #{param1};
	</select>

	<select id="getSongCategoryList"
		resultType="com.demand.server.well_family_house.dto.SongCategory">
		SELECT id,name,avatar,created_at FROM song_categories;
	</select>

	<select id="getSongListByHits" resultType="com.demand.server.well_family_house.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs order by hits desc limit 10;
	</select>

	<select id="getRandomSong" resultType="com.demand.server.well_family_house.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs where id = #{param1};
	</select>

	<select id="getSongListByCategory" resultType="com.demand.server.well_family_house.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs where category_id = #{param1};
	</select>

	<update id="insertSongHit">
		update songs set hits = hits+1 where id = #{param1};
	</update>

	<select id="getSongCommentList" resultType="com.demand.server.well_family_house.dto.CommentInfo">
		select c.id as
		comment_id, c.user_id as user_id, u.name as user_name ,u.avatar as
		avatar,c.content as content, c.created_at as created_at, c.deleted as
		deleted FROM song_comments c,users u where c.user_id = u.id and
		c.song_id
		=#{param1} order by c.updated_at;
	</select>

	<insert id="updateSongLikeUp">
		insert into song_likes(user_id,song_id)
		values(#{param1},#{param2});
	</insert>

	<delete id="updateSongLikeDown">
		delete from song_likes where user_id = #{param1} and
		song_id =#{param2};
	</delete>

	<select id="checkSongLike" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(id) as
		checked
		FROM song_likes where user_id = #{param1} and song_id =
		#{param2};
	</select>

	<insert id="insertSongComment" parameterType="com.demand.server.well_family_house.dto.SongComment"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		song_comments(user_id,song_id,content)
		values(#{user_id},#{song_id},#{content})
	</insert>

	<select id="getSongComment" resultType="com.demand.server.well_family_house.dto.SongComment">
		select * from
		song_comments where
		id = #{param1};
	</select>

	<select id="getSongRangeList" resultType="com.demand.server.well_family_house.dto.Range">
		select id, name from
		ranges;
	</select>


	<!-- song story insert -->
	<insert id="insertSongStory" parameterType="com.demand.server.well_family_house.dto.SongStory"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		song_stories(user_id,range_id,song_id,song_title,song_singer,content,location)
		values(#{user_id},#{range_id},#{song_id},#{song_title},#{song_singer},#{content},#{location});
	</insert>

	<insert id="insertSongPhoto" parameterType="com.demand.server.well_family_house.dto.SongPhoto">
		insert into
		song_photos(song_story_id,type,name,ext)
		values(#{song_story_id},#{type},#{name},#{ext});
	</insert>

	<select id="getSongStory" resultType="com.demand.server.well_family_house.dto.SongStory">
		select id,
		user_id,range_id,song_id,song_title,song_singer,content,location,created_at
		from song_stories where id = #{param1};
	</select>

	<update id="insertAudio">
		update song_stories set record_file = #{param2} where
		id = #{param1};
	</update>

	<!-- memory song -->
	<select id="getSongStoryLikeCount" resultType="com.demand.server.well_family_house.dto.LikeCount">
		select
		count(user_id) as
		like_count from song_story_likes where
		song_story_id =
		#{param1};
	</select>

	<select id="getSongStoryCommentCount"
		resultType="com.demand.server.well_family_house.dto.CommentCount">
		SELECT count(user_id) as comment_count
		FROM
		song_story_comments
		where
		song_story_id = #{param1};
	</select>

	<insert id="updateSongStoryLikeUp">
		insert into song_story_likes(user_id,song_story_id)
		values(#{param1},#{param2});
	</insert>

	<delete id="updateSongStoryLikeDown">
		delete from song_story_likes where user_id =
		#{param1} and
		song_story_id =#{param2};
	</delete>

	<select id="checkSongStoryLike" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(id) as
		checked
		FROM song_story_likes where user_id = #{param1} and
		song_story_id
		= #{param2};
	</select>

	<select id="checkFamily" resultType="com.demand.server.well_family_house.dto.Check">
		select count(a.family_id) as
		checked from (SELECT family_id FROM wellfamily.family_joiners where
		user_id =#{param1}) a,
		(SELECT family_id FROM wellfamily.family_joiners
		where user_id = #{param2}) b where
		a.family_id = b.family_id;
	</select>

	<select id="getSongStoryPublicList" resultType="com.demand.server.well_family_house.dto.SongStory">
		SELECT * FROM
		wellfamily.song_stories where user_id =#{param1} and range_id!=2 and
		range_id!=3 order by created_at desc;
	</select>

	<select id="getSongStoryFamilyList" resultType="com.demand.server.well_family_house.dto.SongStory">
		SELECT * FROM
		wellfamily.song_stories where user_id =#{param1} and range_id!=3 order
		by created_at desc;
	</select>

	<select id="getSongStoryMeList" resultType="com.demand.server.well_family_house.dto.SongStory">
		SELECT * FROM
		wellfamily.song_stories where user_id =#{param1} order by created_at
		desc;
	</select>

	<select id="getSongStoryPhotoList" resultType="com.demand.server.well_family_house.dto.SongPhoto">
		SELECT * FROM
		wellfamily.song_photos
		where song_story_id= #{param1};
	</select>

	<select id="getSongStoryCommentList" resultType="com.demand.server.well_family_house.dto.CommentInfo">
		select c.id as
		comment_id, c.user_id as user_id, u.name as user_name ,u.avatar as
		avatar,c.content as content, c.created_at as created_at, c.deleted as
		deleted FROM song_story_comments c,users u where c.user_id = u.id and
		c.song_story_id
		=#{param1} order by c.updated_at;
	</select>

	<insert id="insertSongStoryComment"
		parameterType="com.demand.server.well_family_house.dto.SongStoryComment"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		song_story_comments(user_id,song_story_id,content)
		values(#{user_id},#{song_story_id},#{content});
	</insert>

	<select id="getSongStoryComment"
		resultType="com.demand.server.well_family_house.dto.SongStoryComment">
		select * from
		song_story_comments where
		id = #{param1};
	</select>

	<select id="getSongStoryAvatar"
		resultType="com.demand.server.well_family_house.dto.SongStoryAvatar">
		SELECT avatar FROM wellfamily.songs where id = #{param1};
	</select>

	<!-- find family name -->
	<select id="getFamilySearchList" resultType="com.demand.server.well_family_house.dto.Family">
		SELECT * FROM
		wellfamily.familys where name like CONCAT('%',#{param1},'%')
	</select>

	<!-- find user name -->
	<select id="getUserSearchList" resultType="com.demand.server.well_family_house.dto.User">
		SELECT
		id,email,name,birth,phone,avatar,level FROM wellfamily.users where
		name like CONCAT('%',#{param1},'%') or email like
		CONCAT('%',#{param1},'%')
	</select>

	<insert id="insertFamily" parameterType="com.demand.server.well_family_house.dto.Family"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		familys(name,content,user_id)
		values(#{name},#{content},#{user_id})
	</insert>

	<insert id="insertFamilyJoiner">
		insert into
		family_joiners(family_id,user_id)
		values(#{param1},#{param2})
	</insert>

	<update id="updateFamilyAvatar">
		update familys set avatar = #{param2} where id =
		#{param1};
	</update>


	<select id="getFamily" resultType="com.demand.server.well_family_house.dto.Family">
		SELECT
		id,name,content,avatar,user_id,created_at FROM wellfamily.familys
		where id = #{param1};
	</select>

	<insert id="insertUserIntoFamily">
		insert into
		family_joiners(family_id,user_id)
		values(#{param1},#{param2});
	</insert>

	<delete id="deleteUserFromFamily">
		delete from family_joiners where family_id
		=#{param1}
		and user_id = #{param2};
	</delete>

	<select id="getEmotionList"
		resultType="com.demand.server.well_family_house.dto.SongStoryEmotionInfo">
		SELECT se.id as id, se.name as name, se.emotion_category_id
		as
		emotion_category_id, ec.avatar as avatar
		FROM
		wellfamily.song_story_emotions se, emotion_categories ec where
		se.emotion_category_id = ec.id
		order by se.emotion_category_id asc;
	</select>

	<insert id="insertEmotionIntoSongStory">
		insert into
		song_story_emotion_joiners(song_story_id,song_story_emotion_id)
		values(#{param1},#{param2});
	</insert>

	<select id="getSongStoryEmotionData"
		resultType="com.demand.server.well_family_house.dto.SongStoryEmotionData">
		select e.id as id, e.name as name, e.emotion_category_id as
		emotion_category_id,ec.avatar as avatar, e.created_at as created_at,
		e.updated_at as updated_at
		from (SELECT ej.id as id, e.name as name,
		e.emotion_category_id as
		emotion_category_id, ej.created_at as
		created_at, ej.updated_at as
		updated_at
		FROM
		wellfamily.song_story_emotion_joiners ej, song_story_emotions e
		where
		ej.song_story_emotion_id = e.id and ej.song_story_id = #{param1}) e
		,emotion_categories ec where e.emotion_category_id =ec.id order by
		e.id;
	</select>

	<select id="getFamilyUserCheck" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(id) as
		checked FROM wellfamily.family_joiners where family_id = #{param1} and
		user_id
		!= #{param2} and user_id = #{param3};
	</select>

	<!-- profile edit -->
	<select id="getFavoriteCategoryList" resultType="com.demand.server.well_family_house.dto.Category">
		SELECT
		id,name,created_at,updated_at FROM
		favorite_categories;
	</select>

	<select id="getCheckGender" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT gender as checked
		FROM wellfamily.users where id = #{param1};
	</select>

	<select id="getCheckFavorite" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(*) as
		checked FROM wellfamily.user_favorite_joiners where user_id =
		#{param1} and
		favorite_category_id= #{param2};
	</select>

	<select id="getCheckSongCategory" resultType="com.demand.server.well_family_house.dto.Check">
		SELECT count(*) as
		checked FROM wellfamily.user_song_category_joiners where user_id =
		#{param1} and
		song_category_id= #{param2};
	</select>

	<select id="getUserAvatar" resultType="com.demand.server.well_family_house.dto.User">
		SELECT avatar FROM
		wellfamily.users where id =#{param1};
	</select>

	<update id="updateUserAvatar">
		update users set avatar = #{param2} where id =
		#{param1};
	</update>

	<select id="getFamilyAvatar" resultType="com.demand.server.well_family_house.dto.Family">
		SELECT avatar FROM
		wellfamily.familys where id =#{param1};
	</select>

	<delete id="deleteFavorite">
		delete FROM wellfamily.user_favorite_joiners where
		user_id=#{param1};
	</delete>

	<delete id="deleteSongCategory">
		delete FROM wellfamily.user_song_category_joiners
		where user_id=#{param1}
	</delete>

	<insert id="insertFavorite">
		insert into
		user_favorite_joiners(user_id,favorite_category_id)
		values(#{param1},#{param2});
	</insert>

	<insert id="insertSongCategory">
		insert into
		user_song_category_joiners(user_id,song_category_id)
		values(#{param1},#{param2});
	</insert>

	<update id="udpateUserInfo">
		update users set name = #{param2},birth =
		#{param3},phone = #{param4},gender = #{param5} where id =
		#{param1};
	</update>

	<!-- family edit -->
	<update id="updateFamilyInfo">
		update familys set name = #{param2}, content =
		#{param3} where id =
		#{param1};
	</update>

	<select id="getFamilyInfoByCreator" resultType="com.demand.server.well_family_house.dto.Family">
		SELECT
		id,name,content,avatar,user_id,created_at
		FROM familys where id =
		#{param1};
	</select>

	<update id="updateComment">
		update comments set content = #{param2} where id =
		#{param1};
	</update>

	<update id="updateSongComment">
		update song_comments set content = #{param2} where id
		=
		#{param1};
	</update>


	<update id="updateSongStoryComment">
		update song_story_comments set content = #{param2}
		where id =
		#{param1};
	</update>


	<delete id="deleteComment">
		delete FROM comments
		where id=#{param1}
	</delete>

	<delete id="deleteSongComment">
		delete FROM song_comments
		where id=#{param1}
	</delete>

	<delete id="deleteSongStoryComment">
		delete FROM song_story_comments
		where id=#{param1}
	</delete>


	<select id="getReportCategoryList" resultType="com.demand.server.well_family_house.dto.Category">
		SELECT
		id,name,created_at,updated_at FROM
		report_categories;
	</select>

	<insert id="insertCommentReport">
		insert into
		comment_reports(user_id,comment_category_id,report_category_id,comment_id)
		values(#{param1},#{param2},#{param3},#{param4});
	</insert>

	<insert id="insertNotification"
		parameterType="com.demand.server.well_family_house.dto.Notification"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		notifications(user_id,receive_category_id,receiver_id,content_name,intent_flag,intent_id,behavior_id)
		values(#{user_id},#{receive_category_id},#{receiver_id},#{content_name},#{intent_flag},#{intent_id},#{behavior_id});
	</insert>


	<!-- get token -->
	<select id="getTokenForMe" resultType="com.demand.server.well_family_house.dto.Token">
		select
		id,token from users
		where
		id = #{param1};
	</select>

	<!-- get token -->
	<select id="getTokenForFamily" resultType="com.demand.server.well_family_house.dto.Token">
		SELECT us.id as
		id,us.token as token FROM family_joiners fj ,users us
		where fj.user_id
		= us.id and
		fj.family_id = #{param1} and us.id !=#{param2};
	</select>

	<!-- set token -->
	<insert id="insertUserNotification">
		insert into
		user_notification_joiners(user_id,notification_id)
		values(#{param1},#{param2});
	</insert>

	<!-- get msg -->
	<select id="getBodyForNotification" resultType="String">
		SELECT
		CONCAT(us.name,'님이 "',nt.content_name,'" ', bh.name) as message FROM
		notifications
		nt,users us, behaviors bh
		where us.id = nt.user_id and
		bh.id = nt.behavior_id and
		nt.id =#{param1};
	</select>


	<!-- get notification -->
	<select id="getNotification"
		resultType="com.demand.server.well_family_house.dto.Notification">
		SELECT nt.id as id, nt.user_id as user_id,
		nt.receive_category_id as receive_category_id, nt.receiver_id as
		receiver_id,
		nt.content_name as content_name, nt.intent_flag as
		intent_flag, nt.intent_id as
		intent_id, nt.receiver_id as
		receiver_id,nt.behavior_id as behavior_id,
		nt.checked as checked,
		nt.created_at as created_at,nt.updated_at as
		updated_at
		FROM
		user_notification_joiners nj , notifications nt
		where
		nj.notification_id = nt.id and
		nj.user_id = #{param1} order by
		nt.created_at desc limit 15;
	</select>

	<!-- get notificationInfo -->
	<select id="getNotificationForCreatingFamily"
		resultType="com.demand.server.well_family_house.dto.NotificationInfo">
		SELECT us.id as id, us.avatar as avatar, us.name as name,
		nt.content_name as content, fm.avatar as photo from notifications nt,
		behaviors bh, users us, familys fm
		where nt.behavior_id = bh.id and
		nt.intent_id =fm.id and
		nt.user_id = us.id and
		nt.id =#{param1};
	</select>

	<select id="getNotificationForWritingStory"
		resultType="com.demand.server.well_family_house.dto.NotificationInfo">
		select s.id as id, s.avatar as avatar, s.name as name,
		s.content as content, s.title as title, concat(pt.name,".",pt.ext) as
		photo

		FROM photos pt, (SELECT us.id as id, us.avatar as avatar, us.name as name,
		nt.content_name as content, st.content as title, st.id as story_id

		from notifications nt,
		behaviors bh, users us, stories st

		where nt.behavior_id = bh.id and
		nt.intent_id =st.id and
		nt.user_id = us.id
		and
		nt.id =#{param1}) s

		where pt.story_id = s.story_id group by(pt.story_id)
	</select>

	<update id="updateNotificationCheck">
		update notifications set checked = 1 where id =
		#{param1};
	</update>

</mapper>
