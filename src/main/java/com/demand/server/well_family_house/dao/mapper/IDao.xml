<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demand.server.well_family_house.dao.IDao">
	<!-- user info -->
	<select id="getUserInfo" resultType="com.demand.server.well_family_house.dto.User">
		select
		id,email,name,birth,phone,avatar,level from
		users
		where
		id = #{param1}
	</select>

	<!-- intro -->
	<select id="login" resultType="com.demand.server.well_family_house.dto.User">
		select
		id,email,name,birth,phone,avatar,level from
		users
		where
		email = #{param1}
		and password = #{param2}
	</select>

	<select id="email_check" resultType="com.demand.server.well_family_house.dto.Email">
		select email from
		users where
		email = #{param1}
	</select>


	<insert id="join">
		insert into users(email,password,name,birth,phone)
		values(#{param1},#{param2},#{param3},#{param4},#{param5})
	</insert>


	<!-- main -->
	<select id="getFamilyInfo" resultType="com.demand.server.well_family_house.dto.Family">
		select f.id as id, f.name
		as name, f.content as
		content, f.avatar as avatar from familys f ,
		(SELECT family_id as f_id FROM family_joiners where user_id =
		#{param1}) u
		where f.id = u.f_id
	</select>

	<!-- family main -->
	<select id="getFamilyUserInfo" resultType="com.demand.server.well_family_house.dto.User">
		select u.id as id
		,u.email as email,u.name as name,u.birth as birth,u.phone as phone,
		u.avatar as avatar,u.level as level from users u, (SELECT * FROM
		family_joiners where
		family_id = #{param1} and user_id != #{param2}) f
		where u.id = f.user_id order by name;
	</select>

	<select id="getContentList" resultType="com.demand.server.well_family_house.dto.StoryInfo">
		SELECT u.id as user_id,
		u.name as name,u.avatar as avatar, s.id as story_id, s.created_at as
		created_at
		, s.content
		as content
		FROM users u, stories s
		where u.id =
		s.user_id and
		s.family_id=#{param1} order by s.created_at desc;

	</select>

	<select id="getPhotoList" resultType="com.demand.server.well_family_house.dto.Photo">
		select p.id as id,
		p.story_id as story_id, p.type as type, p.name as name, p.ext as ext
		from photos p, (SELECT id FROM stories where family_id =#{param1}) s
		where p.story_id = s.id order by p.updated_at desc
	</select>

	<!-- content count (family main) -->
	<select id="getLikeCount" resultType="com.demand.server.well_family_house.dto.LikeCount">
		select count(user_id) as
		like_count from story_likes where
		story_id = #{param1}
	</select>

	<select id="getCommentCount"
		resultType="com.demand.server.well_family_house.dto.CommentCount">
		SELECT count(user_id) as comment_count
		FROM comments where
		story_id = #{param1}
	</select>

	<select id="getContentPhotoList" resultType="com.demand.server.well_family_house.dto.Photo">
		SELECT id, story_id
		, type
		, name, ext FROM photos
		where story_id= #{param1};
	</select>

	<insert id="updateLikeUp">
		insert into story_likes(user_id,story_id)
		values(#{param1},#{param2})
	</insert>

	<delete id="updateLikeDown">
		delete from story_likes where user_id = #{param1} and
		story_id =#{param2}
	</delete>

	<select id="checkLike" resultType="com.demand.server.well_family_house.dto.CheckBox">
		SELECT count(id) as checked
		FROM story_likes where user_id = #{param1} and story_id = #{param2};
	</select>

	<!-- comment list -->

	<select id="getCommentList" resultType="com.demand.server.well_family_house.dto.CommentInfo">
		select c.id as
		comment_id, c.user_id as user_id, u.name as user_name ,u.avatar as
		avatar,c.content as content, c.created_at as created_at, c.deleted as
		deleted FROM comments c,users u where c.user_id = u.id and c.story_id
		=#{param1} order by c.updated_at
	</select>

	<insert id="insertComment" parameterType="com.demand.server.well_family_house.dto.Comment"
		useGeneratedKeys="true" keyProperty="id">
		insert into comments(user_id,story_id,content)
		values(#{user_id},#{story_id},#{content})
	</insert>
	
	<select id="getComment" resultType="com.demand.server.well_family_house.dto.Comment">
		select * from comments where id = #{param1}
	</select>

	<!-- story insert -->
	<insert id="insertStory" parameterType="com.demand.server.well_family_house.dto.Story"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		stories(user_id,family_id,content)
		values(#{user_id},#{family_id},#{content})
	</insert>

	<insert id="insertPhoto" parameterType="com.demand.server.well_family_house.dto.Photo">
		insert into
		photos(story_id,type,name,ext)
		values(#{story_id},#{type},#{name},#{ext})
	</insert>

	<select id="getStory" resultType="com.demand.server.well_family_house.dto.Story">
		select id,
		user_id,family_id,content,created_at from stories where id = #{param1}
	</select>
	
	
	<!-- memory song -->
	<select id="getSongLikeCount" resultType="com.demand.server.well_family_house.dto.SongLikeCount">
		select count(user_id) as
		like_count from song_likes where
		song_id = #{param1}
	</select>

	<select id="getSongCommentCount"
		resultType="com.demand.server.well_family_house.dto.SongCommentCount">
		SELECT count(user_id) as comment_count
		FROM song_comments where
		song_id = #{param1}
	</select>
	
	<select id="getSongCategoryList" resultType="com.demand.server.well_family_house.dto.SongCategory">
		SELECT id,name,created_at FROM song_categories;
	</select>
	
	<select id="getSongListByHits" resultType="com.demand.server.well_family_house.dto.Song">
		SELECT id,name,ext,title,singer,avatar,category_id,created_at FROM wellfamily.songs order by hits desc limit 10;
	</select>
	
	<select id="getRandomSong" resultType="com.demand.server.well_family_house.dto.Song">
		SELECT id,name,ext,title,singer,avatar,category_id,created_at FROM wellfamily.songs where id = #{param1};
	</select>
</mapper>
