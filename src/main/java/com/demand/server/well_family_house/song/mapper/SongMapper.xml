<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.demand.server.well_family_house.song.service.impl.SongMapper">

	<select id="selectSongCategoryList"
		resultType="com.demand.server.well_family_house.common.dto.SongCategory">
		SELECT	id, name, avatar, created_at 
			FROM	song_categories;
	</select>

	<select id="selectSongCommentCount" resultType="int">
		SELECT	count(user_id) as comment_count
			FROM	song_comments
			where	song_id = #{param1};
	</select>

	<select id="selectSongAvatar" resultType="String">
		SELECT	avatar 
			FROM	songs 
		    where	id = #{param1};
	</select>

	<select id="selectSongLikeCount" resultType="int">
		select
		count(user_id)
		as
		like_count from song_likes where
		song_id = #{param1};
	</select>

	<select id="selectSongListByHits" resultType="com.demand.server.well_family_house.common.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs order by hits desc limit 10;
	</select>

	<select id="selectRandomSong" resultType="com.demand.server.well_family_house.common.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs where id = #{param1};
	</select>

	<select id="selectSongListByCategory" resultType="com.demand.server.well_family_house.common.dto.Song">
		SELECT
		id,name,ext,title,singer,avatar,category_id,created_at FROM
		wellfamily.songs where category_id = #{param1};
	</select>

	<update id="updateSongHit">
		update songs set hits = hits+1 where id = #{param1};
	</update>

	<select id="selectSongCommentList"
		resultType="com.demand.server.well_family_house.common.dto.CommentInfo">
		select c.id as
		comment_id, c.user_id as user_id, u.name as
		user_name ,u.avatar as
		avatar,c.content as content, c.created_at as
		created_at, c.deleted as
		deleted FROM song_comments c,users u where
		c.user_id = u.id and
		c.song_id
		=#{param1} order by c.updated_at;
	</select>

	<insert id="insertSongLikeUp">
		insert into song_likes(user_id,song_id)
		values(#{param1},#{param2});
	</insert>

	<delete id="deleteSongLikeDown">
		delete from song_likes where user_id = #{param1} and
		song_id =#{param2};
	</delete>

	<select id="selectSongLikeCheck" resultType="int">
		SELECT count(id) as
		checked
		FROM song_likes where user_id = #{param1} and song_id =
		#{param2};
	</select>

	<insert id="insertSongComment"
		parameterType="com.demand.server.well_family_house.common.dto.SongComment"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		song_comments(user_id,song_id,content)
		values(#{user_id},#{song_id},#{content})
	</insert>

	<select id="selectSongComment"
		resultType="com.demand.server.well_family_house.common.dto.SongComment">
		select * from
		song_comments where
		id = #{param1};
	</select>

	<select id="selectSongRangeList"
		resultType="com.demand.server.well_family_house.common.dto.Range">
		select id, name from
		ranges;
	</select>

	<!-- song story insert -->
	<insert id="insertSongStory"
		parameterType="com.demand.server.well_family_house.common.dto.SongStory"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		song_stories(user_id,range_id,song_id,song_title,song_singer,content,location)
		values(#{user_id},#{range_id},#{song_id},#{song_title},#{song_singer},#{content},#{location});
	</insert>

	<select id="selectSongStory"
		resultType="com.demand.server.well_family_house.common.dto.SongStory">
		select id,
		user_id,range_id,song_id,song_title,song_singer,content,location,created_at
		from song_stories where id = #{param1};
	</select>

	<select id="selectEmotionList"
		resultType="com.demand.server.well_family_house.common.dto.SongStoryEmotionInfo">
		SELECT se.id as id, se.name as name, se.emotion_category_id
		as
		emotion_category_id, ec.avatar as avatar
		FROM
		wellfamily.song_story_emotions se, emotion_categories ec where
		se.emotion_category_id = ec.id
		order by se.emotion_category_id asc;
	</select>
</mapper>
