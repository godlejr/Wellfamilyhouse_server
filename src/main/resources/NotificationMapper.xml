<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.demand.server.well_family_house.notification.service.impl.NotificationMapper">

	<insert id="insertNotification"
		parameterType="Notification"
		useGeneratedKeys="true" keyProperty="id">
		insert	into	notifications(user_id, receive_category_id, receiver_id, content_name, intent_flag, intent_id, behavior_id)
			values(#{user_id}, #{receive_category_id}, #{receiver_id}, #{content_name}, #{intent_flag}, #{intent_id}, #{behavior_id});
	</insert>

	<select id="selectNotificationForCreatingFamilyAndJoinAndWantToJoin"
		resultType="NotificationInfo">
		SELECT	us.id as id, us.avatar as avatar, us.name as name, nt.content_name as content, fm.avatar as photo 
	
			from	notifications nt, 
					behaviors bh, 
					users us, 
		            familys fm
		            
			where	nt.behavior_id = bh.id	and
					nt.intent_id =fm.id and
					nt.user_id = us.id and
					nt.id =#{param1};
	</select>

	<select id="selectNotificationForWritingCommentAndLike"
		resultType="NotificationInfo">
		SELECT	us.id as id, us.avatar as avatar, us.name as name, nt.content_name as content

			from	notifications nt,
					behaviors bh,
					users us
		
			where	nt.behavior_id = bh.id	and
					nt.user_id = us.id	and
					nt.id = #{param1};
	</select>


	<select id="selectNotificationForWritingStory" statementType="CALLABLE"
		resultType="NotificationInfo">
		{CALL notification_story(#{param1})}
	</select>

	<select id="selectNotificationForWritingSongStory"
		statementType="CALLABLE"
		resultType="NotificationInfo">
		{CALL notification_song_story(#{param1})}
	</select>
	
	
	<select id="selectNotificationForFallDiagnosisStroy" 
		resultType="NotificationInfo">
		SELECT	us.id as id, us.avatar as avatar, us.name as name,
				nt.content_name as content
				
                FROM	notifications nt,
						behaviors bh, 
						users us, 
						fall_diagnosis_stories st
				
                WHERE	nt.behavior_id = bh.id 	AND
						nt.intent_id =st.id 	AND
						nt.user_id = us.id		AND
						nt.id =	NOTIFICATION_ID;
		
	</select>

	<update id="updateNotificationCheck">
		update notifications 
			set	checked = 1 
			where	id = #{param1};
	</update>

	<!-- get token -->
	<select id="selectTokenForUser"
		resultType="Token">
		select	id, token 
			from	users
			where	id = #{param1};
	</select>

	<select id="selectTokenForFamily"
		resultType="Token">
		SELECT	us.id as id, us.token as token
		
			FROM	family_joiners fj,
					users us
		
			where	fj.user_id = us.id	and
					fj.family_id = #{param1}	and
					fj.join_flag =1 and
					us.id !=#{param2};
	</select>

	<select id="selectTokenForFamiles"
		resultType="Token">
		SELECT	distinct us.id as id, us.token as token
			from	users us,
					(SELECT	user_id
						from	family_joiners fj,
								(SELECT	family_id
									FROM	family_joiners
									where	user_id =#{param1} and
											join_flag = 1) fm
						where	fj.family_id = fm.family_id	AND
								fj.join_flag = 1 AND
								fj.user_id != #{param1}) fu
			where	us.id = fu.user_id

	</select>

	<!-- set token -->
	<insert id="insertUserNotification">
		insert into	user_notification_joiners(user_id, notification_id)
			values(#{param1}, #{param2});
	</insert>

	<!-- get msg -->
	<select id="selectBodyForNotification" resultType="String">
		SELECT	CONCAT(us.name,'님이 "',nt.content_name,'" ', bh.name) as message 
			FROM	notifications nt,
					users us, 
		            behaviors bh
			where	us.id = nt.user_id	and
					bh.id = nt.behavior_id	and
					nt.id = #{param1};
	</select>

	<!-- get notification -->
	<select id="selectNotification"
		resultType="Notification">
		SELECT	nt.id as id, nt.user_id as user_id, nt.receive_category_id as receive_category_id, nt.receiver_id as receiver_id,
				nt.content_name as content_name, nt.intent_flag as intent_flag, nt.intent_id as intent_id, nt.receiver_id as receiver_id,nt.behavior_id as behavior_id,
				nt.checked as checked, nt.created_at as created_at,nt.updated_at as updated_at
			
		    FROM	user_notification_joiners nj, 
					notifications nt
			where	nj.notification_id = nt.id and
					nj.user_id = #{param1} 
		            
			order by	nt.created_at desc limit 15;
	</select>

	<delete id="deleteNotificationForDeleteCascade">
		delete 
			from	notifications 
		    where	intent_flag =#{param1}	and 
					intent_id = #{param2};
	</delete>
</mapper>